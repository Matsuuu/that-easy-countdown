{"version":3,"file":"ThatEasyCountdown.js","sourceRoot":"","sources":["../src/ThatEasyCountdown.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  LitElement,\n  html,\n  css,\n  property,\n  customElement,\n  TemplateResult,\n  PropertyValues,\n} from \"lit-element\";\n\n@customElement(\"that-easy-countdown\")\nexport class ThatEasyCountdown extends LitElement {\n  @property({ type: String })\n  countdownTarget: number = Date.now() + 100000;\n\n  @property({ type: String })\n  font: string = \"Roboto\";\n\n  @property({ type: String })\n  color: string = \"#000000\";\n\n  @property({ type: Number })\n  size: number = 24;\n\n  @property({ type: Boolean })\n  showSetup: boolean = true;\n\n  firstUpdated() {\n    this.parseUrlParams();\n    this.setFont();\n    this.setTimer();\n  }\n\n  updated(_changedProperties: PropertyValues) {\n    if (_changedProperties.has(\"showSetup\")) {\n      this.setTimer();\n    }\n  }\n\n  parseUrlParams(): void {\n    const params: string = window.location.search;\n    if (!params) {\n      return;\n    }\n    this.showSetup = false;\n    const paramsSplit: Array<string> = params.substring(1).split(\"&\");\n\n    const paramObject: { [key: string]: string } = {};\n    for (let param of paramsSplit) {\n      const splitSearchParam = param.split(\"=\");\n      paramObject[splitSearchParam[0]] = splitSearchParam[1];\n    }\n\n    if (paramObject.font) {\n      this.font = paramObject.font;\n    }\n    if (paramObject.color) {\n      this.color = paramObject.color;\n    }\n    if (paramObject.size) {\n      this.size = Number(paramObject.size);\n    }\n    if (paramObject.countdownTarget) {\n      this.countdownTarget = Number(paramObject.countdownTarget);\n    }\n  }\n\n  setFont(): void {\n    console.log(document.body);\n    const fontImport = document.createElement(\"link\");\n    fontImport.href = `https://fonts.googleapis.com/css2?family=${this.font}&display=swap`;\n    fontImport.rel = \"stylesheet\";\n    document.head.append(fontImport);\n\n    const fontStyles = document.createElement(\"style\");\n    fontStyles.innerHTML = `\n      `;\n    document.head.append(fontStyles);\n  }\n\n  setTimer(): void {\n    const contentHolder = this.shadowRoot?.querySelector(\"h3\");\n    if (!contentHolder) {\n      return;\n    }\n    setInterval(() => {\n      const now = Date.now();\n      const timeLeft = this.countdownTarget - now;\n\n      const hours = Math.floor(\n        (timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);\n\n      contentHolder.innerHTML = `${this.handleTrailing(\n        hours\n      )}h ${this.handleTrailing(minutes)}m ${this.handleTrailing(seconds)}s`;\n    }, 1000);\n  }\n\n  handleTrailing(num: number): string {\n    return num < 10 ? \"0\" + num : num.toString();\n  }\n\n  render(): TemplateResult {\n    if (this.showSetup) {\n      return html`${this.setupScreen()}`;\n    }\n    return html`<style>\n        :host {\n          font-family: \"${this.font.replace(\"+\", \" \")}\", sans-serif;\n          color: #${this.color};\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100vh;\n          width: 100%;\n        }\n        h3 {\n          font-size: ${this.size}px;\n        }\n      </style>\n      <h3></h3>`;\n  }\n\n  toDateTimeLocal(date: Date): string {\n    return `${date.getFullYear()}-${this.handleTrailing(\n      date.getMonth() + 1\n    )}-${this.handleTrailing(date.getDate())}T${this.handleTrailing(\n      date.getHours()\n    )}:${this.handleTrailing(date.getMinutes())}`;\n  }\n\n  copySettings(): void {\n    let url: string = window.location.origin;\n    console.log(url);\n\n    const font = (this.shadowRoot?.querySelector(\"#font\") as HTMLInputElement)\n      .value;\n    const color = (this.shadowRoot?.querySelector(\"#color\") as HTMLInputElement)\n      .value;\n    const size = (this.shadowRoot?.querySelector(\"#size\") as HTMLInputElement)\n      .value;\n    const countdownTarget = (this.shadowRoot?.querySelector(\n      \"#time\"\n    ) as HTMLInputElement).value;\n\n    console.log(new Date(countdownTarget).getTime());\n    url += `?font=${font}&color=${color}&size=${size}&countdownTarget=${new Date(\n      countdownTarget\n    ).getTime()}`;\n\n    const el = document.createElement(\"textarea\");\n    el.value = url;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  }\n\n  setupScreen(): TemplateResult {\n    return html`\n      <style>\n        .setup-wrapper {\n          display: flex;\n          justify-content: center;\n          flex-direction: column;\n          width: 60%;\n          margin: 10% auto 0;\n        }\n\n        input {\n          font-size: 2rem;\n          border-radius: 4px;\n          background: rgba(255, 255, 255, 0.9);\n          margin: 0 0 1rem 0;\n        }\n      </style>\n      <div class=\"setup-wrapper\">\n        <h2>Set up timer</h2>\n        <input type=\"text\" placeholder=\"Font name\" id=\"font\" value=\"Roboto\" />\n        <input type=\"text\" placeholder=\"Color\" id=\"color\" value=\"000000\" />\n        <input type=\"number\" placeholder=\"Font size\" id=\"size\" value=\"24\" />\n        <input\n          type=\"datetime-local\"\n          value=\"${this.toDateTimeLocal(new Date())}\"\n          placeholder=\"Countdown time\"\n          id=\"time\"\n        />\n        <button @click=${this.copySettings}>Copy to clipboard</button>\n        <p>\n          After copying the settings to clipboard, just paste it to your browser\n          or OBS or whatever.\n        </p>\n      </div>\n    `;\n  }\n}\n"]}